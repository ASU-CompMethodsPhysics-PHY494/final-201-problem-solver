Billiard Simulation - PHY494

Nathaniel Soderberg, Nik O'Brien, Kit Wing Fung

Abstract:

The Problem - Billiards is a game that has its roots buried in physics and geometry. However, human players are doomed to sometimes fail. Therefore the purpose of 
this simulation is to have a computer deduce the most efficient shot given an initial setup of balls. In the development of this code certain problems arose such as; 
implementing the holes, removing balls that fell in these holes, handling collisions, and coding the visuals.

The Approach - To simplify the simulation, python objects were created to easily call the balls and table in the program. Friction was also neglected and 
only five balls were observed, starting in predetermined positions. The program runs in a series of steps that starts by recording each ball’s position. 
Balls are moved based on velocity, remove balls if needed, and then update positions based on collisions. 

The Results - Because efficiency is the goal, the program gives amount of time and number of balls left on the table as outputs. If a certain shot angle 
results in all of the balls being holed in the shortest amount of time that angle is declared the most efficient angle.

Conclusion - With this program the computer can find the best shot given certain parameters.

Code for this project is available at "https://github.com/ASU-CompMethodsPhysics-PHY494/final-billiard-simulation"
